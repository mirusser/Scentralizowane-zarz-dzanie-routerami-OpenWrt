@model List<RouterManagement.Models.ViewModels.RouterActivityDataViewModel>

@Scripts.Render("~/bundles/ListJS")

@{
    ViewBag.Title = "Routers";
}

<h2>All routers added</h2>
<hr>
<div id="routers">
    <table class="table table-striped table-bordered">
        <thead class="thead-inverse">
        <tr>
            <th class="sort" data-sort="Name">Name</th>
            <th class="sort" data-sort="RouterIp">Ip adress</th>
            <th class="sort" data-sort="Port">Port</th>
            <th class="sort" data-sort="Login">Login</th>
            <th class="sort" data-sort="Password">Password?</th>
            <th class="sort" data-sort="IsActive">Is online?</th>
            <th colspan="2">
                <input type="text" class="search" placeholder="Search entity"/>
            </th>
        </tr>
        </thead>
        <tbody class="list">
            @foreach (var r in Model)
            {
                <tr>
                    <td class="name">@r.Name</td>
                    <td class="routerIp">@r.RouterIp</td>
                    <td class="port">@r.Port</td>
                    <td class="login">@r.Login</td>
                    <td class="password">@r.Password</td>
                    <td class="isActive">@r.IsActive</td>

                    <td><button class="btn btn-primary edit-item">Edit</button></td>
                    <td><button class="btn btn-danger remove-item">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
    <button id="addRouterBtn" class="btn btn-primary btn-product col-md-12 col-xs-12">Add router</button>
</div>

<div id="addRouterModal" class="modal fade in" data-url='@Url.Action("AddRouterPartial")'>
    <div id="addRouterContainer"></div>
</div>

<script>
    var options = {
        valueNames: ['name', 'routerIp', 'port', 'login', 'password', 'isActive']
    };

    var routersList = new List('routers', options);

    $(document).ready(function () {
        $(document).on('click', '#addRouterBtn', function () {
            const url = $('#addRouterModal').data('url');

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                success: function (data) {
                    $('#addRouterContainer').html(data);
                    $('#addRouterModal').appendTo("body").modal('show');
                }
            });
        });

        //$(document).on('click', '.edit-item', function () {
        //    const publicationId = $(this).closest('tr').find('.id').text();
        //    const item = publicationList.get('id', publicationId)[0];

        //    const objectToSend = {
        //        Id: item._values.id,
        //        TeacherAuthorsId: item._values.teacherAuthorsId,
        //        AnotherAuthors: item._values.anotherAuthors,
        //        Title: item._values.anotherAuthors,
        //        PublishedIn: item._values.publishedIn,
        //        AdditionalInfo: item._values.additionalInfo
        //    };

        //    const url = $('#modifyPublicationModal').data('url');

        //    $.ajax({
        //        type: "POST",
        //        url: url,
        //        data: objectToSend,
        //        cache: false,
        //        success: function (data) {
        //            $('#modifyPublicationContainer').html(data);

        //            $('#modifyPublicationModal').appendTo("body").modal('show');
        //        }
        //    });
        //});

        $(document).on('click', '.remove-item', function () {
            const name = $(this).closest('tr').find('.name').text();
            $.ajax({
                type: "POST",
                url: "/Admin/RemoveRouter",
                data: {
                    name: name
                },
                cache: false,
                success: function (result) {
                    if (result) {
                        routersList.remove('name', name);
                    }
                    else {
                        alert("There was a problem when deleting router.");
                    }
                }
            });
        });
    });

    function contains(a, obj) {
        var i = a.length;
        while (i--) {
            if (a[i] == obj) {
                return true;
            }
        }
        return false;
    }
</script>
